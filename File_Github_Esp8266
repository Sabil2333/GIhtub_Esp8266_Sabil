#define BLYNK_TEMPLATE_ID "TMPL6JXwsh1A6"
#define BLYNK_TEMPLATE_NAME "UAP"
#define BLYNK_AUTH_TOKEN "ECh7J1b40JxVPakJVpDdP2qKekEtwSwn"

#include <WiFi.h>
#include <BlynkSimpleEsp32.h>
#include <DHT.h>
#include <ESP32Servo.h>

char auth[] = BLYNK_AUTH_TOKEN;
char ssid[] = "Wokwi-GUEST";
char pass[] = "";  // Kosongkan password

// Pin Setup
#define SOIL_PIN A0       // Sensor tanah
#define DHT_PIN D2        // DHT22
#define PUMP_PIN D3       // Pompa/LED
#define BUZZER_PIN D4     // Buzzer
#define SERVO_PIN D5      // Servo motor

// DHT Setup
DHT dht(DHT_PIN, DHT22);

// Servo Setup
Servo waterValve;

// Variables
int soilValue = 0;
float temp = 0;
float humid = 0;
bool isPumping = false;
bool autoMode = true;
bool valveOpen = false;
int servoPosition = 0; // 0 = closed, 90 = open

// Timer
BlynkTimer timer;

void setup() {
  Serial.begin(9600);
 
  // Pin setup
  pinMode(PUMP_PIN, OUTPUT);
  pinMode(BUZZER_PIN, OUTPUT);
  digitalWrite(PUMP_PIN, LOW);
  
  // Servo setup
  waterValve.attach(SERVO_PIN);
  waterValve.write(0); // Start with valve closed
  delay(500);
 
  // Start DHT
  dht.begin();
 
  // Connect to Blynk
  Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass);
 
  // Timer - baca sensor setiap 3 detik
  timer.setInterval(3000L, readSensors);
 
  Serial.println("Smart Irrigation with Servo Ready!");
  beep(2); // Startup sound
}

void loop() {
  Blynk.run();
  timer.run();
 
  // Auto watering
  if (autoMode && soilValue < 300 && !isPumping) {
    startWatering();
  }
 
  // Stop watering after 5 seconds
  static unsigned long wateringStart = 0;
  if (isPumping) {
    if (millis() - wateringStart > 5000) {
      stopWatering();
    }
  } else {
    wateringStart = millis();
  }
}

void readSensors() {
  // Read soil moisture (0-1023, lower = more wet)
  soilValue = analogRead(SOIL_PIN);
  int soilPercent = map(soilValue, 0, 1023, 100, 0);
 
  // Read DHT22
  temp = dht.readTemperature();
  humid = dht.readHumidity();
 
  // Send to Blynk
  Blynk.virtualWrite(V0, soilPercent);     // Soil %
  Blynk.virtualWrite(V1, temp);            // Temperature
  Blynk.virtualWrite(V2, humid);           // Humidity  
  Blynk.virtualWrite(V3, isPumping ? 1 : 0); // Pump status
  Blynk.virtualWrite(V6, valveOpen ? 1 : 0); // Valve status
  Blynk.virtualWrite(V7, servoPosition);   // Servo position
 
  // Print to Serial
  Serial.println("=== SENSOR READINGS ===");
  Serial.println("Soil: " + String(soilPercent) + "%");
  Serial.println("Temp: " + String(temp) + "°C");
  Serial.println("Humidity: " + String(humid) + "%");
  Serial.println("Pump: " + String(isPumping ? "ON" : "OFF"));
  Serial.println("Valve: " + String(valveOpen ? "OPEN" : "CLOSED"));
  Serial.println("Servo Pos: " + String(servoPosition) + "°");
  Serial.println("========================");
 
  // Warning if very dry
  if (soilValue < 200) {
    beep(3);
  }
}

void startWatering() {
  Serial.println(">>> STARTING WATERING SEQUENCE <<<");
  
  // Open valve first
  openValve();
  delay(1000); // Wait for valve to open
  
  // Then start pump
  isPumping = true;
  digitalWrite(PUMP_PIN, HIGH);
  Serial.println(">>> PUMP ON <<<");
  beep(1);
}

void stopWatering() {
  Serial.println(">>> STOPPING WATERING SEQUENCE <<<");
  
  // Stop pump first
  isPumping = false;
  digitalWrite(PUMP_PIN, LOW);
  Serial.println(">>> PUMP OFF <<<");
  
  delay(500); // Wait a bit
  
  // Then close valve
  closeValve();
  beep(2);
}

void openValve() {
  valveOpen = true;
  servoPosition = 90;
  waterValve.write(servoPosition);
  Serial.println(">>> VALVE OPENED <<<");
  
  // Update Blynk
  Blynk.virtualWrite(V6, 1);
  Blynk.virtualWrite(V7, servoPosition);
}

void closeValve() {
  valveOpen = false;
  servoPosition = 0;
  waterValve.write(servoPosition);
  Serial.println(">>> VALVE CLOSED <<<");
  
  // Update Blynk
  Blynk.virtualWrite(V6, 0);
  Blynk.virtualWrite(V7, servoPosition);
}

void setServoPosition(int position) {
  // Limit position between 0-180 degrees
  position = constrain(position, 0, 180);
  servoPosition = position;
  waterValve.write(servoPosition);
  
  // Update valve status based on position
  valveOpen = (position > 45) ? true : false;
  
  Serial.println("Servo moved to: " + String(servoPosition) + "°");
  
  // Update Blynk
  Blynk.virtualWrite(V6, valveOpen ? 1 : 0);
  Blynk.virtualWrite(V7, servoPosition);
}

void beep(int times) {
  for (int i = 0; i < times; i++) {
    tone(BUZZER_PIN, 1000, 200);
    delay(300);
  }
}

// Blynk Controls
BLYNK_WRITE(V4) { // Auto Mode Switch
  autoMode = param.asInt();
  Serial.println("Auto Mode: " + String(autoMode ? "ON" : "OFF"));
  
  // If auto mode is turned off and system is watering, stop it
  if (!autoMode && isPumping) {
    stopWatering();
  }
}

BLYNK_WRITE(V5) { // Manual Water Button
  if (param.asInt() && !autoMode && !isPumping) {
    startWatering();
  }
}

BLYNK_WRITE(V8) { // Manual Valve Control (Button)
  if (param.asInt()) {
    if (valveOpen) {
      closeValve();
    } else {
      openValve();
    }
  }
}

BLYNK_WRITE(V9) { // Servo Position Slider (0-180)
  if (!autoMode) { // Only allow manual control when not in auto mode
    int position = param.asInt();
    setServoPosition(position);
  }
}
